/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package admin.managerental;

import admin.Profile;
import admin.Settings;
import admin.AdminDash;
import admin.Logs;
import admin.manageuser.Users;
import admin.manageclothes.Clothes;
import Authentication.Login;
import javax.swing.JOptionPane;
import config.config;
import config.session;
import java.awt.BorderLayout;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.JTableHeader;
import java.awt.Color;
import java.awt.Font;
import javax.swing.Timer;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Frame;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.JScrollPane;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.awt.print.Printable;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.print.PageFormat;
import java.sql.PreparedStatement;
import java.util.Date;
import javax.swing.BorderFactory;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextPane;
import javax.swing.JTextField;
import javax.swing.JPanel;
import javax.swing.JPanel;
import javax.swing.JPanel;

import javax.swing.JPanel;
/**
 *
 * @author Administrator
 */
public class Rental extends javax.swing.JFrame {
   
    
    public Rental() {
        initComponents();
        
        setTitle("Rental Management");
        setupRentalTable();
        loadRentalData();
        
        // Add mouse listener to return button
        returnbutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                returnbuttonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                returnbuttonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                returnbuttonMouseExited(evt);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        Messages = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        Manage = new javax.swing.JLabel();
        Name = new javax.swing.JLabel();
        rentaltable = new javax.swing.JScrollPane();
        settings = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        Rentalmanagement = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        Productmanagement = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        accountmanagement = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        Dashboard = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        Profile = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        returnbutton = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        back = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 370, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Messages.setBackground(new java.awt.Color(51, 51, 51));
        Messages.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));
        Messages.setForeground(new java.awt.Color(51, 51, 51));
        Messages.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MessagesMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MessagesMouseExited(evt);
            }
        });

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Consolas", 0, 11)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("RENTALS");

        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/rent.png"))); // NOI18N

        javax.swing.GroupLayout MessagesLayout = new javax.swing.GroupLayout(Messages);
        Messages.setLayout(MessagesLayout);
        MessagesLayout.setHorizontalGroup(
            MessagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MessagesLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addContainerGap(86, Short.MAX_VALUE))
        );
        MessagesLayout.setVerticalGroup(
            MessagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MessagesLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel7))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MessagesLayout.createSequentialGroup()
                .addComponent(jLabel21)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel1.add(Messages, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 290, 210, 30));

        Manage.setFont(new java.awt.Font("Consolas", 0, 11)); // NOI18N
        Manage.setForeground(new java.awt.Color(255, 255, 255));
        Manage.setText("MANAGE");
        jPanel1.add(Manage, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, -1, -1));

        Name.setFont(new java.awt.Font("Consolas", 0, 11)); // NOI18N
        Name.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(Name, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, 120, 20));
        jPanel1.add(rentaltable, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 80, 510, 260));

        settings.setBackground(new java.awt.Color(0, 0, 0,80));
        settings.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        settings.setForeground(new java.awt.Color(102, 102, 102));
        settings.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                settingsMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                settingsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                settingsMouseExited(evt);
            }
        });

        jLabel29.setFont(new java.awt.Font("Consolas", 0, 11)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setText("SETTINGS");

        jLabel30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/settings.png"))); // NOI18N

        javax.swing.GroupLayout settingsLayout = new javax.swing.GroupLayout(settings);
        settings.setLayout(settingsLayout);
        settingsLayout.setHorizontalGroup(
            settingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, settingsLayout.createSequentialGroup()
                .addContainerGap(46, Short.MAX_VALUE)
                .addComponent(jLabel30)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel29)
                .addGap(78, 78, 78))
        );
        settingsLayout.setVerticalGroup(
            settingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, settingsLayout.createSequentialGroup()
                .addGap(0, 2, Short.MAX_VALUE)
                .addGroup(settingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel30)
                    .addComponent(jLabel29)))
        );

        jPanel1.add(settings, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 350, 210, 30));

        Rentalmanagement.setBackground(new java.awt.Color(0, 0, 0,0));
        Rentalmanagement.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        Rentalmanagement.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RentalmanagementMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                RentalmanagementMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                RentalmanagementMouseExited(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Consolas", 0, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("CLOTHES");

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/clothes.png"))); // NOI18N

        javax.swing.GroupLayout RentalmanagementLayout = new javax.swing.GroupLayout(Rentalmanagement);
        Rentalmanagement.setLayout(RentalmanagementLayout);
        RentalmanagementLayout.setHorizontalGroup(
            RentalmanagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RentalmanagementLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addContainerGap(86, Short.MAX_VALUE))
        );
        RentalmanagementLayout.setVerticalGroup(
            RentalmanagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RentalmanagementLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4))
            .addGroup(RentalmanagementLayout.createSequentialGroup()
                .addComponent(jLabel18)
                .addGap(0, 2, Short.MAX_VALUE))
        );

        jPanel1.add(Rentalmanagement, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 250, 210, 30));

        Productmanagement.setBackground(new java.awt.Color(0, 0, 0));
        Productmanagement.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        Productmanagement.setForeground(new java.awt.Color(51, 51, 51));
        Productmanagement.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ProductmanagementMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ProductmanagementMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ProductmanagementMouseExited(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Consolas", 0, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("LOGS");

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logs.png"))); // NOI18N

        javax.swing.GroupLayout ProductmanagementLayout = new javax.swing.GroupLayout(Productmanagement);
        Productmanagement.setLayout(ProductmanagementLayout);
        ProductmanagementLayout.setHorizontalGroup(
            ProductmanagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProductmanagementLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel16)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addContainerGap(95, Short.MAX_VALUE))
        );
        ProductmanagementLayout.setVerticalGroup(
            ProductmanagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProductmanagementLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(ProductmanagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING)))
        );

        jPanel1.add(Productmanagement, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 210, 210, 30));

        accountmanagement.setBackground(new java.awt.Color(0, 0, 0));
        accountmanagement.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        accountmanagement.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                accountmanagementMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                accountmanagementMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                accountmanagementMouseExited(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Consolas", 0, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("USERS");

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/user.png"))); // NOI18N

        javax.swing.GroupLayout accountmanagementLayout = new javax.swing.GroupLayout(accountmanagement);
        accountmanagement.setLayout(accountmanagementLayout);
        accountmanagementLayout.setHorizontalGroup(
            accountmanagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accountmanagementLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jLabel14)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addContainerGap(88, Short.MAX_VALUE))
        );
        accountmanagementLayout.setVerticalGroup(
            accountmanagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, accountmanagementLayout.createSequentialGroup()
                .addGap(0, 2, Short.MAX_VALUE)
                .addGroup(accountmanagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel14)
                    .addComponent(jLabel2)))
        );

        jPanel1.add(accountmanagement, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 170, 210, 30));

        Dashboard.setBackground(new java.awt.Color(0, 0, 0));
        Dashboard.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        Dashboard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DashboardMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                DashboardMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                DashboardMouseExited(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Consolas", 0, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("DASHBOARD");

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/home.png"))); // NOI18N

        javax.swing.GroupLayout DashboardLayout = new javax.swing.GroupLayout(Dashboard);
        Dashboard.setLayout(DashboardLayout);
        DashboardLayout.setHorizontalGroup(
            DashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DashboardLayout.createSequentialGroup()
                .addContainerGap(50, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addGap(69, 69, 69))
        );
        DashboardLayout.setVerticalGroup(
            DashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DashboardLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(DashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel5)))
        );

        jPanel1.add(Dashboard, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 210, 30));

        Profile.setBackground(new java.awt.Color(0, 0, 0));
        Profile.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        Profile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ProfileMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ProfileMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ProfileMouseExited(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Consolas", 0, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("PROFILE");

        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/profile.png"))); // NOI18N

        javax.swing.GroupLayout ProfileLayout = new javax.swing.GroupLayout(Profile);
        Profile.setLayout(ProfileLayout);
        ProfileLayout.setHorizontalGroup(
            ProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ProfileLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel15)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addGap(76, 76, 76))
        );
        ProfileLayout.setVerticalGroup(
            ProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ProfileLayout.createSequentialGroup()
                .addGap(0, 14, Short.MAX_VALUE)
                .addComponent(jLabel6))
            .addGroup(ProfileLayout.createSequentialGroup()
                .addComponent(jLabel15)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel1.add(Profile, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 210, 30));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 370, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 50, 370, 3));

        jLabel1.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("RENTALS");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 30, -1, -1));

        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel2MouseClicked(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Consolas", 1, 11)); // NOI18N
        jLabel8.setText("RENT");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 6, Short.MAX_VALUE)
                .addComponent(jLabel8))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 350, 60, 20));

        jLabel9.setFont(new java.awt.Font("Consolas", 1, 11)); // NOI18N
        jLabel9.setText("RETURN");

        javax.swing.GroupLayout returnbuttonLayout = new javax.swing.GroupLayout(returnbutton);
        returnbutton.setLayout(returnbuttonLayout);
        returnbuttonLayout.setHorizontalGroup(
            returnbuttonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(returnbuttonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addContainerGap(14, Short.MAX_VALUE))
        );
        returnbuttonLayout.setVerticalGroup(
            returnbuttonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, returnbuttonLayout.createSequentialGroup()
                .addGap(0, 6, Short.MAX_VALUE)
                .addComponent(jLabel9))
        );

        jPanel1.add(returnbutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 350, 60, 20));

        back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/c.png"))); // NOI18N
        jPanel1.add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 400));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void MessagesMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MessagesMouseEntered
        Messages.setOpaque(true);
        Messages.setBackground(new java.awt.Color(102,102,102));
    }//GEN-LAST:event_MessagesMouseEntered

    private void MessagesMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MessagesMouseExited
        Messages.setOpaque(true);
        Messages.setBackground(new java.awt.Color(51,51,51));
    }//GEN-LAST:event_MessagesMouseExited

    private void settingsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settingsMouseEntered
        settings.setOpaque(true);
        settings.setBackground(new java.awt.Color(102,102,102));
    }//GEN-LAST:event_settingsMouseEntered

    private void settingsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settingsMouseExited
        settings.setOpaque(true);
        settings.setBackground(new java.awt.Color(0,0,0));
    }//GEN-LAST:event_settingsMouseExited

    private void RentalmanagementMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RentalmanagementMouseEntered
        Rentalmanagement.setOpaque(true);
        Rentalmanagement.setBackground(new java.awt.Color(102,102,102));
    }//GEN-LAST:event_RentalmanagementMouseEntered

    private void RentalmanagementMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RentalmanagementMouseExited
        Rentalmanagement.setOpaque(true);
        Rentalmanagement.setBackground(new java.awt.Color(0,0,0));
    }//GEN-LAST:event_RentalmanagementMouseExited

    private void ProductmanagementMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProductmanagementMouseEntered
        Productmanagement.setOpaque(true);
        Productmanagement.setBackground(new java.awt.Color(102,102,102));
    }//GEN-LAST:event_ProductmanagementMouseEntered

    private void ProductmanagementMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProductmanagementMouseExited
        Productmanagement.setOpaque(true);
        Productmanagement.setBackground(new java.awt.Color(0,0,0));
    }//GEN-LAST:event_ProductmanagementMouseExited

    private void accountmanagementMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_accountmanagementMouseClicked
        new Users().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_accountmanagementMouseClicked

    private void accountmanagementMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_accountmanagementMouseEntered
        accountmanagement.setOpaque(true);
        accountmanagement.setBackground(new java.awt.Color(102,102,102));
    }//GEN-LAST:event_accountmanagementMouseEntered

    private void accountmanagementMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_accountmanagementMouseExited
        accountmanagement.setOpaque(true);
        accountmanagement.setBackground(new java.awt.Color(0,0,0));
    }//GEN-LAST:event_accountmanagementMouseExited

    private void ProfileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProfileMouseClicked
        new Profile().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_ProfileMouseClicked

    private void ProfileMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProfileMouseEntered
        Profile.setOpaque(true);
        Profile.setBackground(new java.awt.Color(102,102,102));
    }//GEN-LAST:event_ProfileMouseEntered

    private void ProfileMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProfileMouseExited
        Profile.setOpaque(true);
        Profile.setBackground(new java.awt.Color(0,0,0));
    }//GEN-LAST:event_ProfileMouseExited

    private void DashboardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DashboardMouseClicked
        new AdminDash().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_DashboardMouseClicked

    private void DashboardMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DashboardMouseEntered
        Dashboard.setOpaque(true);
        Dashboard.setBackground(new java.awt.Color(102,102,102));
    }//GEN-LAST:event_DashboardMouseEntered

    private void DashboardMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DashboardMouseExited
        Dashboard.setOpaque(true);
        Dashboard.setBackground(new java.awt.Color(0,0,0));
    }//GEN-LAST:event_DashboardMouseExited

    private void ProductmanagementMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProductmanagementMouseClicked
    new Logs().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_ProductmanagementMouseClicked

    private void RentalmanagementMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RentalmanagementMouseClicked
         new Clothes().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_RentalmanagementMouseClicked

    private void settingsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settingsMouseClicked
         new Settings().setVisible(true);
         this.dispose();
    }//GEN-LAST:event_settingsMouseClicked

    private void jPanel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseClicked
        // Check if user is logged in
        session ses = session.getInstance();
        if (ses == null || ses.getUsername() == null) {
            JOptionPane.showMessageDialog(this, "Please login first to perform this action.", "Authentication Required", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        new addRental().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jPanel2MouseClicked

    private void jPanel2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseEntered
        jPanel2.setBackground(new java.awt.Color(102,102,102));
        jLabel8.setForeground(new java.awt.Color(255,255,255));
    }//GEN-LAST:event_jPanel2MouseEntered

    private void jPanel2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseExited
        jPanel2.setBackground(new java.awt.Color(255,255,255));
        jLabel8.setForeground(new java.awt.Color(255,255,255));
    }//GEN-LAST:event_jPanel2MouseExited

    private void returnbuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_returnbuttonMouseClicked
        // Check if user is logged in
        session ses = session.getInstance();
        if (ses == null || ses.getUsername() == null) {
            JOptionPane.showMessageDialog(this, "Please login first to perform this action.", "Authentication Required", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Create input dialog for rental ID
        String rentalIdStr = JOptionPane.showInputDialog(this, 
            "Enter the Rental ID to return:", 
            "Return Item", 
            JOptionPane.QUESTION_MESSAGE);

        if (rentalIdStr == null || rentalIdStr.trim().isEmpty()) {
            return; // User cancelled or entered empty string
        }

        try {
            int rentalId = Integer.parseInt(rentalIdStr);
            
            // Verify rental exists and is not already returned
            config connect = new config();
            Connection conn = connect.getConnection();
            if (conn == null) {
                JOptionPane.showMessageDialog(this, "Database connection failed!");
                return;
            }

            // Check rental status and dates
            String checkQuery = "SELECT r.status, r.clothesid, c.clothname, r.rental_date, r.return_date, r.total_amount, c.price " +
                              "FROM rentals r " +
                              "JOIN clothes c ON r.clothesid = c.clothesid " +
                              "WHERE r.rental_id = ?";
            PreparedStatement checkStmt = conn.prepareStatement(checkQuery);
            checkStmt.setInt(1, rentalId);
            ResultSet rs = checkStmt.executeQuery();

            if (!rs.next()) {
                JOptionPane.showMessageDialog(this, "Rental ID not found!");
                return;
            }

            String status = rs.getString("status");
            int clothesId = rs.getInt("clothesid");
            String clothName = rs.getString("clothname");
            Date rentalDate = rs.getDate("rental_date");
            Date returnDate = rs.getDate("return_date");
            double totalAmount = rs.getDouble("total_amount");
            double dailyPrice = rs.getDouble("price"); // Get daily price
            Date currentDate = new Date(); // Get current date

            // Check if the item is actually rented
            if (!"active".equals(status)) {
                JOptionPane.showMessageDialog(this, "This item is not currently rented out!");
                return;
            }

            if ("returned".equals(status)) {
                JOptionPane.showMessageDialog(this, "This item has already been returned!");
                return;
            }

            // Check if current date is before rental date
            if (currentDate.before(rentalDate)) {
                JOptionPane.showMessageDialog(this, 
                    "Cannot return item before rental date!\n" +
                    "Rental Date: " + rentalDate + "\n" +
                    "Current Date: " + currentDate,
                    "Invalid Return Date",
                    JOptionPane.WARNING_MESSAGE);
                return;
            }

            // Calculate if return is early or late
            boolean isLate = currentDate.after(returnDate);
            boolean isEarly = currentDate.before(returnDate);
            double refundAmount = 0.0;
            
            String returnMessage = "";
            if (isLate) {
                returnMessage = "\nWARNING: This return is late! Return date was: " + returnDate;
            } else if (isEarly) {
                // Calculate 50% refund of one day's price only
                refundAmount = dailyPrice * 0.5;
                returnMessage = "\nEarly Return: 50% refund of one day's price (₱" + String.format("%.2f", refundAmount) + ") will be issued.";
            }

            // Confirm return
            int confirm = JOptionPane.showConfirmDialog(this,
                "Confirm return of item:\n" +
                "Rental ID: " + rentalId + "\n" +
                "Item: " + clothName + "\n" +
                "Rental Date: " + rentalDate + "\n" +
                "Return Date: " + returnDate + "\n" +
                "Total Amount: ₱" + String.format("%.2f", totalAmount) + returnMessage,
                "Confirm Return",
                JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {
                // Start transaction
                conn.setAutoCommit(false);
                try {
                    // Update rental status
                    String updateRentalQuery = "UPDATE rentals SET status = 'returned' WHERE rental_id = ?";
                    PreparedStatement updateRentalStmt = conn.prepareStatement(updateRentalQuery);
                    updateRentalStmt.setInt(1, rentalId);
                    updateRentalStmt.executeUpdate();

                    // Update clothes availability
                    String updateClothesQuery = "UPDATE clothes SET availability = 'available' WHERE clothesid = ?";
                    PreparedStatement updateClothesStmt = conn.prepareStatement(updateClothesQuery);
                    updateClothesStmt.setInt(1, clothesId);
                    updateClothesStmt.executeUpdate();

                    // If early return, process refund
                    if (isEarly && refundAmount > 0) {
                        // Insert refund record
                        String insertRefundQuery = "INSERT INTO refunds (rental_id, amount, refund_date, reason) VALUES (?, ?, ?, ?)";
                        PreparedStatement refundStmt = conn.prepareStatement(insertRefundQuery);
                        refundStmt.setInt(1, rentalId);
                        refundStmt.setDouble(2, refundAmount);
                        refundStmt.setDate(3, new java.sql.Date(currentDate.getTime()));
                        refundStmt.setString(4, "Early return - 50% refund");
                        refundStmt.executeUpdate();
                        refundStmt.close();
                    }

                    // Commit transaction
                    conn.commit();

                    String successMessage = "Item successfully returned!";
                    if (isLate) {
                        successMessage += "\nNote: This was a late return.";
                    } else if (isEarly) {
                        successMessage += "\nRefund of ₱" + String.format("%.2f", refundAmount) + " has been processed.";
                    }
                    JOptionPane.showMessageDialog(this, successMessage);
                    
                    // Refresh the rental table
                    loadRentalData();
                } catch (Exception e) {
                    // Rollback transaction on error
                    conn.rollback();
                    throw e;
                } finally {
                    // Reset auto-commit
                    conn.setAutoCommit(true);
                }
            }

            // Close resources
            rs.close();
            checkStmt.close();
            conn.close();

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Rental ID number!");
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error processing return: " + e.getMessage());
        }
    }//GEN-LAST:event_returnbuttonMouseClicked

    private void returnbuttonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_returnbuttonMouseEntered
        returnbutton.setBackground(new java.awt.Color(102,102,102));
    }//GEN-LAST:event_returnbuttonMouseEntered

    private void returnbuttonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_returnbuttonMouseExited
        returnbutton.setBackground(new java.awt.Color(255,255,255));
    }//GEN-LAST:event_returnbuttonMouseExited

    private JTable rentalTable; // declare this at class level
    private void setupRentalTable() {
        DefaultTableModel model = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; // Makes table non-editable
            }
        };

        model.addColumn("Rental ID");
        model.addColumn("Customer Name");
        model.addColumn("Phone");
        model.addColumn("Rental Date");
        model.addColumn("Return Date");
        model.addColumn("Total Amount");
        model.addColumn("Status");

        rentalTable = new JTable(model);
        rentaltable.setViewportView(rentalTable);

        // Row click event to show receipt
        rentalTable.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int selectedRow = rentalTable.getSelectedRow();
                if (selectedRow != -1) {
                    int rentalId = Integer.parseInt(rentalTable.getValueAt(selectedRow, 0).toString());
                    String customerName = rentalTable.getValueAt(selectedRow, 1).toString();
                    String customerPhone = rentalTable.getValueAt(selectedRow, 2).toString();
                    Date rentalDate = (Date) rentalTable.getValueAt(selectedRow, 3);
                    Date returnDate = (Date) rentalTable.getValueAt(selectedRow, 4);
                    String totalAmount = rentalTable.getValueAt(selectedRow, 5).toString();
                    String status = rentalTable.getValueAt(selectedRow, 6).toString();

                    int clothesId = getClothesIdByRentalId(rentalId);

                    showPrintableReceipt(rentalId, customerName, customerPhone,
                            rentalDate, returnDate, totalAmount, status, clothesId);
                }
            }
        });
    }

    // Load data into the table
    private void loadRentalData() {
        try {
            // Check if user is logged in
            session ses = session.getInstance();
            if (ses == null || ses.getUsername() == null) {
                JOptionPane.showMessageDialog(this, "Please login first to view rental data.", "Authentication Required", JOptionPane.WARNING_MESSAGE);
                return;
            }

            config connect = new config();
            Connection conn = connect.getConnection();
            if (conn == null) {
                JOptionPane.showMessageDialog(this, "Database connection failed!");
                return;
            }

            DefaultTableModel model = (DefaultTableModel) rentalTable.getModel();
            model.setRowCount(0); // Clear previous data

            String query = "SELECT rental_id, customer_name, customer_phone, rental_date, return_date, total_amount, status FROM rentals ORDER BY rental_date DESC";
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(query);

            while (rs.next()) {
                Object[] row = {
                    rs.getInt("rental_id"),
                    rs.getString("customer_name"),
                    rs.getString("customer_phone"),
                    rs.getDate("rental_date"),
                    rs.getDate("return_date"),
                    String.format("₱%.2f", rs.getDouble("total_amount")),
                    rs.getString("status")
                };
                model.addRow(row);
            }

            rs.close();
            stmt.close();
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error loading rental data: " + e.getMessage());
        }
    }

    // Get clothes ID for receipt
    private int getClothesIdByRentalId(int rentalId) {
        int clothesId = -1;
        try {
            config connect = new config();
            Connection conn = connect.getConnection();
            if (conn != null) {
                String query = "SELECT clothesid FROM rentals WHERE rental_id = ?";
                PreparedStatement pstmt = conn.prepareStatement(query);
                pstmt.setInt(1, rentalId);
                ResultSet rs = pstmt.executeQuery();
                if (rs.next()) {
                    clothesId = rs.getInt("clothesid");
                }
                rs.close();
                pstmt.close();
                conn.close();
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error fetching clothes ID: " + e.getMessage());
        }
        return clothesId;
    }

    // Show printable receipt
    private void showPrintableReceipt(int rentalId, String customerName, String customerPhone,
                                  Date rentalDate, Date returnDate, String totalAmount,
                                  String status, int clothesId) {
        try {
            config connect = new config();
            Connection conn = connect.getConnection();
            if (conn == null) {
                JOptionPane.showMessageDialog(this, "Database connection failed!");
                return;
            }

            // Get clothing details and refund information
            String query = "SELECT c.*, r.user_id, r.total_amount, " +
                          "(SELECT amount FROM refunds WHERE rental_id = ?) as refund_amount " +
                          "FROM clothes c " +
                          "JOIN rentals r ON c.clothesid = r.clothesid " +
                          "WHERE r.rental_id = ?";
            PreparedStatement pstmt = conn.prepareStatement(query);
            pstmt.setInt(1, rentalId);
            pstmt.setInt(2, rentalId);
            ResultSet rs = pstmt.executeQuery();

            String clothName = "";
            String description = "";
            String size = "";
            String category = "";
            String color = "";
            double price = 0.0;
            int userId = 0;
            double refundAmount = 0.0;

            if (rs.next()) {
                clothName = rs.getString("clothname");
                description = rs.getString("description");
                size = rs.getString("sizes");
                category = rs.getString("category");
                color = rs.getString("color");
                price = rs.getDouble("price");
                userId = rs.getInt("user_id");
                refundAmount = rs.getDouble("refund_amount");
            }

            rs.close();
            pstmt.close();
            conn.close();

            // Calculate number of days
            long diffInMillies = returnDate.getTime() - rentalDate.getTime();
            long diffInDays = diffInMillies / (24 * 60 * 60 * 1000);

            // Create a more professional receipt with clothing details
            String receiptHTML = "<html><body style='font-family: 'Segoe UI', Arial, sans-serif; max-width: 400px; margin: 0 auto; background-color: #ffffff;'>"
                + "<div style='text-align: center; border-bottom: 2px solid #f0f0f0; padding: 20px 0; margin-bottom: 20px; background-color: #ffffff;'>"
                + "<h1 style='color: #333; margin: 0; font-size: 24px; font-weight: 600;'>MB ATELIER</h1>"
                + "<p style='color: #666; margin: 8px 0; font-size: 14px;'>Rental Receipt</p>"
                + "</div>"
                
                + "<div style='margin-bottom: 20px; background-color: #f8f9fa; padding: 15px; border-radius: 8px;'>"
                + "<h2 style='color: #333; font-size: 16px; margin: 0 0 10px 0; font-weight: 600;'>Rental Details</h2>"
                + "<table style='width: 100%; border-collapse: collapse; font-size: 13px;'>"
                + "<tr><td style='padding: 8px; color: #666; width: 40%;'>Rental ID:</td><td style='padding: 8px; color: #333; text-align: left; font-weight: 500;'>" + rentalId + "</td></tr>"
                + "<tr><td style='padding: 8px; color: #666;'>Status:</td><td style='padding: 8px; color: #333; text-align: left; font-weight: 500;'>" + status + "</td></tr>"
                + "<tr><td style='padding: 8px; color: #666;'>Rental Date:</td><td style='padding: 8px; color: #333; text-align: left; font-weight: 500;'>" + rentalDate + "</td></tr>"
                + "<tr><td style='padding: 8px; color: #666;'>Return Date:</td><td style='padding: 8px; color: #333; text-align: left; font-weight: 500;'>" + returnDate + "</td></tr>"
                + "</table>"
                + "</div>"

                + "<div style='margin-bottom: 20px; background-color: #f8f9fa; padding: 15px; border-radius: 8px;'>"
                + "<h2 style='color: #333; font-size: 16px; margin: 0 0 10px 0; font-weight: 600;'>Customer Information</h2>"
                + "<table style='width: 100%; border-collapse: collapse; font-size: 13px;'>"
                + "<tr><td style='padding: 8px; color: #666; width: 40%;'>User ID:</td><td style='padding: 8px; color: #333; text-align: left; font-weight: 500;'>" + userId + "</td></tr>"
                + "<tr><td style='padding: 8px; color: #666;'>Name:</td><td style='padding: 8px; color: #333; text-align: left; font-weight: 500;'>" + customerName + "</td></tr>"
                + "<tr><td style='padding: 8px; color: #666;'>Phone:</td><td style='padding: 8px; color: #333; text-align: left; font-weight: 500;'>" + customerPhone + "</td></tr>"
                + "</table>"
                + "</div>"

                + "<div style='margin-bottom: 20px; background-color: #f8f9fa; padding: 15px; border-radius: 8px;'>"
                + "<h2 style='color: #333; font-size: 16px; margin: 0 0 10px 0; font-weight: 600;'>Clothing Details</h2>"
                + "<table style='width: 100%; border-collapse: collapse; font-size: 13px;'>"
                + "<tr><td style='padding: 8px; color: #666; width: 40%;'>Name:</td><td style='padding: 8px; color: #333; text-align: left; font-weight: 500;'>" + clothName + "</td></tr>"
                + "<tr><td style='padding: 8px; color: #666;'>Category:</td><td style='padding: 8px; color: #333; text-align: left; font-weight: 500;'>" + category + "</td></tr>"
                + "<tr><td style='padding: 8px; color: #666;'>Size:</td><td style='padding: 8px; color: #333; text-align: left; font-weight: 500;'>" + size + "</td></tr>"
                + "<tr><td style='padding: 8px; color: #666;'>Color:</td><td style='padding: 8px; color: #333; text-align: left; font-weight: 500;'>" + color + "</td></tr>"
                + "</table>"
                + "</div>"

                + "<div style='margin-bottom: 20px; background-color: #f8f9fa; padding: 15px; border-radius: 8px;'>"
                + "<h2 style='color: #333; font-size: 16px; margin: 0 0 10px 0; font-weight: 600;'>Payment Information</h2>"
                + "<table style='width: 100%; border-collapse: collapse; font-size: 13px;'>"
                + "<tr><td style='padding: 8px; color: #666; width: 40%;'>Daily Rate:</td><td style='padding: 8px; color: #333; text-align: left; font-weight: 500;'>₱" + String.format("%.2f", price) + "</td></tr>"
                + "<tr><td style='padding: 8px; color: #666;'>Number of Days:</td><td style='padding: 8px; color: #333; text-align: left; font-weight: 500;'>" + diffInDays + " days</td></tr>"
                + "<tr style='font-weight: bold;'><td style='padding: 8px; color: #333;'>Total Amount:</td><td style='padding: 8px; color: #333; text-align: left;'>" + totalAmount + "</td></tr>";

            // Add refund information if there is a refund
            if (refundAmount > 0) {
                receiptHTML += "<tr style='color: #28a745;'><td style='padding: 8px;'>Refund Amount:</td><td style='padding: 8px; text-align: left;'>-₱" + String.format("%.2f", refundAmount) + "</td></tr>"
                           + "<tr style='font-weight: bold; color: #28a745;'><td style='padding: 8px;'>Final Amount:</td><td style='padding: 8px; text-align: left;'>₱" + String.format("%.2f", Double.parseDouble(totalAmount.replace("₱", "")) - refundAmount) + "</td></tr>";
            }

            receiptHTML += "</table>"
                + "</div>"

                + "<div style='text-align: center; border-top: 2px solid #f0f0f0; padding: 20px 0; margin-top: 20px; background-color: #ffffff;'>"
                + "<p style='color: #666; margin: 5px 0; font-size: 12px;'>Thank you for choosing MB ATELIER!</p>"
                + "<p style='color: #666; margin: 5px 0; font-size: 12px;'>Please return the item on or before the return date.</p>"
                + "</div>"
                + "</body></html>";

            // Use JTextPane to support HTML formatting
            JTextPane receiptPane = new JTextPane();
            receiptPane.setContentType("text/html");
            receiptPane.setText(receiptHTML);
            receiptPane.setEditable(false);
            receiptPane.setBackground(Color.WHITE);

            JScrollPane scrollPane = new JScrollPane(receiptPane);
            scrollPane.setPreferredSize(new Dimension(450, 600));
            scrollPane.setBorder(BorderFactory.createEmptyBorder());

            // Create print button with modern styling
            JButton printBtn = new JButton("Print Receipt");
            printBtn.setFont(new Font("Segoe UI", Font.BOLD, 14));
            printBtn.setBackground(new Color(51, 51, 51));
            printBtn.setForeground(Color.WHITE);
            printBtn.setFocusPainted(false);
            printBtn.setBorderPainted(false);
            printBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            printBtn.setBorder(BorderFactory.createEmptyBorder(10, 20, 10, 20));

            // Add hover effect
            printBtn.addMouseListener(new MouseAdapter() {
                public void mouseEntered(MouseEvent e) {
                    printBtn.setBackground(new Color(70, 70, 70));
                }
                public void mouseExited(MouseEvent e) {
                    printBtn.setBackground(new Color(51, 51, 51));
                }
            });

            printBtn.addActionListener(e -> {
                try {
                    boolean complete = receiptPane.print();
                    if (!complete) {
                        JOptionPane.showMessageDialog(null, "Print was canceled.");
                    }
                } catch (Exception ex) {
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(null, "Error printing receipt: " + ex.getMessage());
                }
            });

            // Panel to hold everything with modern styling
            JPanel panel = new JPanel(new BorderLayout(0, 0));
            panel.setBackground(Color.WHITE);
            panel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));
            panel.add(scrollPane, BorderLayout.CENTER);
            
            // Create a panel for the button with padding
            JPanel buttonPanel = new JPanel(new FlowLayout(FlowLayout.CENTER));
            buttonPanel.setBackground(Color.WHITE);
            buttonPanel.setBorder(BorderFactory.createEmptyBorder(10, 0, 0, 0));
            buttonPanel.add(printBtn);
            panel.add(buttonPanel, BorderLayout.SOUTH);

            // Show in dialog with custom title and modern styling
            JDialog dialog = new JDialog((Frame) null, "Rental Receipt", true);
            dialog.setContentPane(panel);
            dialog.pack();
            dialog.setLocationRelativeTo(null);
            dialog.setResizable(false);
            dialog.setVisible(true);

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error generating receipt: " + e.getMessage());
        }
    }


    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Rental.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Rental.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Rental.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Rental.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Rental().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Dashboard;
    private javax.swing.JLabel Manage;
    private javax.swing.JPanel Messages;
    private javax.swing.JLabel Name;
    private javax.swing.JPanel Productmanagement;
    private javax.swing.JPanel Profile;
    private javax.swing.JPanel Rentalmanagement;
    private javax.swing.JPanel accountmanagement;
    private javax.swing.JLabel back;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane rentaltable;
    private javax.swing.JPanel returnbutton;
    private javax.swing.JPanel settings;
    // End of variables declaration//GEN-END:variables
}
