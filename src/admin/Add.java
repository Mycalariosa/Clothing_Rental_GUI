/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package admin;

import config.config;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;

/**
 *
 * @author Administrator
 */
public class Add extends javax.swing.JFrame {

    /** Creates new form Add */
    public Add() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        fname = new javax.swing.JTextField();
        lname = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        status = new javax.swing.JComboBox<>();
        role = new javax.swing.JComboBox<>();
        password = new javax.swing.JPasswordField();
        username = new javax.swing.JTextField();
        contact = new javax.swing.JTextField();
        add = new javax.swing.JPanel();
        addn = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        backg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        fname.setFont(new java.awt.Font("Consolas", 0, 10)); // NOI18N
        fname.setMinimumSize(new java.awt.Dimension(6, 20));
        jPanel1.add(fname, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 150, 140, 20));

        lname.setFont(new java.awt.Font("Consolas", 0, 10)); // NOI18N
        lname.setPreferredSize(new java.awt.Dimension(6, 20));
        jPanel1.add(lname, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 180, 140, 20));

        email.setFont(new java.awt.Font("Consolas", 0, 10)); // NOI18N
        email.setPreferredSize(new java.awt.Dimension(6, 20));
        jPanel1.add(email, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 210, 140, 20));

        status.setFont(new java.awt.Font("Consolas", 0, 10)); // NOI18N
        status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pending", "Active" }));
        status.setPreferredSize(new java.awt.Dimension(66, 20));
        status.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusActionPerformed(evt);
            }
        });
        jPanel1.add(status, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 240, 140, 20));

        role.setFont(new java.awt.Font("Consolas", 0, 10)); // NOI18N
        role.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "User", "Admin", " " }));
        role.setPreferredSize(new java.awt.Dimension(54, 20));
        role.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roleActionPerformed(evt);
            }
        });
        jPanel1.add(role, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 240, 130, 20));

        password.setFont(new java.awt.Font("Consolas", 0, 10)); // NOI18N
        password.setMinimumSize(new java.awt.Dimension(6, 20));
        jPanel1.add(password, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 210, 130, 20));

        username.setFont(new java.awt.Font("Consolas", 0, 11)); // NOI18N
        jPanel1.add(username, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 180, 130, 20));

        contact.setFont(new java.awt.Font("Consolas", 0, 10)); // NOI18N
        contact.setPreferredSize(new java.awt.Dimension(6, 20));
        jPanel1.add(contact, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 150, 130, 20));

        add.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        add.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addMouseExited(evt);
            }
        });

        addn.setFont(new java.awt.Font("Consolas", 0, 11)); // NOI18N
        addn.setText("ADD");

        javax.swing.GroupLayout addLayout = new javax.swing.GroupLayout(add);
        add.setLayout(addLayout);
        addLayout.setHorizontalGroup(
            addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(addn)
                .addContainerGap(22, Short.MAX_VALUE))
        );
        addLayout.setVerticalGroup(
            addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addLayout.createSequentialGroup()
                .addGap(0, 2, Short.MAX_VALUE)
                .addComponent(addn))
        );

        jPanel1.add(add, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 290, -1, 20));

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel18.setFont(new java.awt.Font("Consolas", 0, 10)); // NOI18N
        jLabel18.setText("Email");

        jLabel15.setFont(new java.awt.Font("Consolas", 0, 10)); // NOI18N
        jLabel15.setText("Lastname");

        jLabel14.setBackground(new java.awt.Color(0, 0, 0));
        jLabel14.setFont(new java.awt.Font("Consolas", 0, 10)); // NOI18N
        jLabel14.setText("Firstname");

        jLabel24.setFont(new java.awt.Font("Consolas", 0, 10)); // NOI18N
        jLabel24.setText(" Status");

        jLabel23.setFont(new java.awt.Font("Consolas", 0, 10)); // NOI18N
        jLabel23.setText("Contact");

        jLabel22.setFont(new java.awt.Font("Consolas", 0, 10)); // NOI18N
        jLabel22.setText("Username");

        jLabel25.setFont(new java.awt.Font("Consolas", 0, 10)); // NOI18N
        jLabel25.setText("Password");

        jLabel21.setFont(new java.awt.Font("Consolas", 0, 10)); // NOI18N
        jLabel21.setText("Role");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGap(36, 36, 36)
                            .addComponent(jLabel18))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGap(25, 25, 25)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel14))
                .addGap(159, 159, 159)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel23)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addContainerGap(194, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(79, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(91, 91, 91))
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 70, 480, 280));

        backg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Black and White Modern Sign-up and Login Website Page UI Desktop Prototype.png"))); // NOI18N
        jPanel1.add(backg, new org.netbeans.lib.awtextra.AbsoluteConstraints(-240, 0, 800, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 560, 400));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void addMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_addMouseExited

    private void addMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_addMouseEntered

    private void addMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addMouseClicked
        config connect = new config();

        // Retrieve user input
        String firstNameText = fname.getText().trim();
        String lastNameText = lname.getText().trim();
        String contactNumberText = contact.getText().trim();
        String emailText = email.getText().trim();
        String usernameText = username.getText().trim();
        char[] passwordChars = password.getPassword();
        String selectedRole = (String) role.getSelectedItem();
        String selectedStatus = (String) status.getSelectedItem();

        StringBuilder errorMessage = new StringBuilder();

        // Validation checks
        if (firstNameText.isEmpty() || lastNameText.isEmpty() || contactNumberText.isEmpty() ||
            emailText.isEmpty() || usernameText.isEmpty() || passwordChars.length == 0 ||
            selectedRole == null || selectedStatus == null) {

            errorMessage.append("Please fill out all required fields.\n");

        } else {
            if (!contactNumberText.matches("\\d{11}")) {
                errorMessage.append("Invalid contact number format. Must be 11 digits.\n");
            }
            if (!isValidEmail(emailText)) {
                errorMessage.append("Invalid email format.\n");
            } else if (isEmailTaken(emailText)) {
                errorMessage.append("Email is already taken.\n");
            }
            if (isUsernameTaken(usernameText)) {
                errorMessage.append("Username is already taken.\n");
            }
            if (!validatePassword(password)) {
                return;
            }
        }

        // Show error message if validation fails
        if (errorMessage.length() > 0) {
            JOptionPane.showMessageDialog(this, errorMessage.toString(), "Validation Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Hash password
        String passwordText = new String(passwordChars);
        String hashedPassword = hashPassword(passwordText);

        // Corrected SQL insert query
        String sql = "INSERT INTO user (fname, lname, email, contact, username, password, status, role) VALUES (?, ?, ?, ?, ?, ?, ?, ?)";

        try (PreparedStatement pst = connect.getConnection().prepareStatement(sql)) {
            pst.setString(1, firstNameText);
            pst.setString(2, lastNameText);
            pst.setString(3, emailText);
            pst.setString(4, contactNumberText);
            pst.setString(5, usernameText);
            pst.setString(6, hashedPassword);
            pst.setString(7, selectedStatus);
            pst.setString(8, selectedRole);

            pst.executeUpdate();

            // Success message
            JOptionPane.showMessageDialog(this, "Account Registered Successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
            new accmanagement().setVisible(true);
            this.dispose();

            // Clear input fields
            fname.setText("");
            lname.setText("");
            contact.setText("");
            email.setText("");
            username.setText("");
            password.setText("");
            role.setSelectedIndex(0);
            status.setSelectedIndex(0);

        } catch (SQLException ex) {
            Logger.getLogger(getClass().getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Database Error: Unable to register account.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        }

        // Check if username is already taken
        private boolean isUsernameTaken(String username) {
            config connect = new config();
            String sql = "SELECT COUNT(*) FROM user WHERE username = ?";
            try (PreparedStatement pst = connect.getConnection().prepareStatement(sql)) {
                pst.setString(1, username);
                try (ResultSet rs = pst.executeQuery()) {
                    return rs.next() && rs.getInt(1) > 0;
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
            return false;
        }

        // Check if email is already taken
        private boolean isEmailTaken(String email) {
            config connect = new config();
            String sql = "SELECT COUNT(*) FROM user WHERE email = ?";
            try (PreparedStatement pst = connect.getConnection().prepareStatement(sql)) {
                pst.setString(1, email);
                try (ResultSet rs = pst.executeQuery()) {
                    return rs.next() && rs.getInt(1) > 0;
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
            return false;
        }

        // Validate email format
        private boolean isValidEmail(String email) {
            String regex = "^[A-Za-z0-9+_.-]+@[A-Za-z0-9.-]+$";
            return email.matches(regex);
        }

        // Validate password strength
        private boolean validatePassword(JPasswordField passwordField) {
            String password = new String(passwordField.getPassword());
            StringBuilder errorMessage = new StringBuilder();
            boolean isValid = true;

            if (password.isEmpty()) {
                errorMessage.append("Password cannot be empty.\n");
                isValid = false;
            }
            if (password.length() < 8) {
                errorMessage.append("Password must be at least 8 characters long.\n");
                isValid = false;
            }
            if (!password.matches(".*[A-Z].*")) {
                errorMessage.append("Password must contain at least one uppercase letter.\n");
                isValid = false;
            }
            if (!password.matches(".*[a-z].*")) {
                errorMessage.append("Password must contain at least one lowercase letter.\n");
                isValid = false;
            }
            if (!password.matches(".*\\d.*")) {
                errorMessage.append("Password must contain at least one digit.\n");
                isValid = false;
            }
            if (!password.matches(".*[!@#$%^&*()_+=\\-\\[\\]{};':\"\\\\|,.<>\\/?].*")) {
                errorMessage.append("Password must contain at least one special character.\n");
                isValid = false;
            }

            if (!isValid) {
                try {
                    ImageIcon icon = new ImageIcon(getClass().getResource("/imgs/error.png"));
                    JOptionPane.showMessageDialog(this, errorMessage.toString(), "Password Validation", JOptionPane.ERROR_MESSAGE, icon);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, errorMessage.toString(), "Password Validation", JOptionPane.ERROR_MESSAGE);
                }
            }
            return isValid;
        }

        // Hash password using SHA-256
        private String hashPassword(String password) {
            try {
                MessageDigest md = MessageDigest.getInstance("SHA-256");
                byte[] hashed = md.digest(password.getBytes());
                StringBuilder hex = new StringBuilder();
                for (byte b : hashed) {
                    hex.append(String.format("%02x", b));
                }
                return hex.toString();
            } catch (NoSuchAlgorithmException e) {
                JOptionPane.showMessageDialog(this, "Error while hashing password", "Error", JOptionPane.ERROR_MESSAGE);
                return null;
            }

        }

        private void showError(String message) {
            JOptionPane.showMessageDialog(this, message, "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_addMouseClicked

    private void roleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roleActionPerformed

    private void statusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_statusActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
    
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Add().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel add;
    private javax.swing.JLabel addn;
    private javax.swing.JLabel backg;
    private javax.swing.JTextField contact;
    private javax.swing.JTextField email;
    private javax.swing.JTextField fname;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField lname;
    private javax.swing.JPasswordField password;
    private javax.swing.JComboBox<String> role;
    private javax.swing.JComboBox<String> status;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables

}
